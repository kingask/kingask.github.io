<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/11/30/hello-world/"/>
    <url>/2024/11/30/hello-world/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><video width="320" height="240" controls>  <source src="��Ƶ��ַд����" type="video/mp4">  �����������֧�ֲ��Ÿ���Ƶ��</video>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>easytrojan</title>
    <link href="/2024/09/19/easytrojan/"/>
    <url>/2024/09/19/easytrojan/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="EasyTrojan"><a href="#EasyTrojan" class="headerlink" title="EasyTrojan"></a>EasyTrojan</h1><h2 id="世界上最简单的Trojan部署脚本，仅需一行命令即可搭建一台代理服务器"><a href="#世界上最简单的Trojan部署脚本，仅需一行命令即可搭建一台代理服务器" class="headerlink" title="世界上最简单的Trojan部署脚本，仅需一行命令即可搭建一台代理服务器"></a>世界上最简单的Trojan部署脚本，仅需一行命令即可搭建一台代理服务器</h2><p>该项目会自动提供trojan服务所需的免费域名与证书，无需购买、解析等繁琐操作</p><p>支持RHEL 7、8、9 (CentOS、RedHat、AlmaLinux、RockyLinux)、Debian 9、10、11、12、Ubuntu 16、18、20、22</p><p>技术原理不做解释，初衷只为解决个人用户与主机商家被阻断连接的问题，降低大量IP被阻断造成的各种后续影响</p><p>该项目仅限研究用途，用户应根据所在管辖区的当地法律评估自己的法规遵从义务</p><h2 id="首次安装"><a href="#首次安装" class="headerlink" title="首次安装"></a>首次安装</h2><p>请将结尾的password更换为自己的密码，例如 bash easytrojan.sh 123456，安装成功后会返回trojan的连接参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl https://raw.githubusercontent.com/eastmaple/easytrojan/main/easytrojan.sh -o easytrojan.sh &amp;&amp; <span class="hljs-built_in">chmod</span> +x easytrojan.sh &amp;&amp; bash easytrojan.sh password<br></code></pre></td></tr></table></figure><h2 id="放行端口"><a href="#放行端口" class="headerlink" title="放行端口"></a>放行端口</h2><p>如果服务器开启了防火墙，应放行TCP80与443端口，如在云厂商的web管理页面有防火墙应同时放行TCP80与443端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># RHEL 7、8、9 (CentOS、RedHat、AlmaLinux、RockyLinux) 放行端口命令</span><br>firewall-cmd --permanent --add-port=80/tcp --add-port=443/tcp &amp;&amp; firewall-cmd --reload &amp;&amp; iptables -F<br><br><span class="hljs-comment"># Debian 9、10、11、12、Ubuntu 16、18、20、22 放行端口命令</span><br>sudo ufw allow proto tcp from any to any port 80,443 &amp;&amp; sudo iptables -F<br><br></code></pre></td></tr></table></figure><p>验证端口是否放行 (示例IP应修改为trojan服务器的IP)</p><p>通过浏览器访问脚本提供的免费域名，例如1.3.5.7.nip.io<br>如果自动跳转至https，页面显示Service Unavailable，说明端口已放行</p><h2 id="密码管理"><a href="#密码管理" class="headerlink" title="密码管理"></a>密码管理</h2><p>请将结尾的password更换为自己的密码，仅限字母、数字、下划线，非多密码管理用途无需使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 下载trojan密码管理脚本</span><br>curl https://raw.githubusercontent.com/eastmaple/easytrojan/main/mytrojan.sh -o mytrojan.sh &amp;&amp; <span class="hljs-built_in">chmod</span> +x mytrojan.sh<br><br><span class="hljs-comment"># 创建密码</span><br>bash mytrojan.sh add password<br><br><span class="hljs-comment"># 一次创建多个密码示例</span><br>bash mytrojan.sh add password1 password2 ...<br><br><span class="hljs-comment"># 删除密码</span><br>bash mytrojan.sh del password<br><br><span class="hljs-comment"># 一次删除多个密码示例</span><br>bash mytrojan.sh del password1 password2 ...<br><br><span class="hljs-comment"># 流量查询</span><br>bash mytrojan.sh status password1 password2 ...<br><br><span class="hljs-comment"># 流量归零</span><br>bash mytrojan.sh rotate<br>*流量统计归零后会自动在/etc/caddy/trojan/data目录下生成历史记录<br><br><span class="hljs-comment"># 密码列表</span><br>bash mytrojan.sh list<br><br></code></pre></td></tr></table></figure><h2 id="重新安装"><a href="#重新安装" class="headerlink" title="重新安装"></a>重新安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl stop caddy.service &amp;&amp; curl https://raw.githubusercontent.com/eastmaple/easytrojan/main/easytrojan.sh -o easytrojan.sh &amp;&amp; <span class="hljs-built_in">chmod</span> +x easytrojan.sh &amp;&amp; bash easytrojan.sh password<br></code></pre></td></tr></table></figure><h2 id="完全卸载"><a href="#完全卸载" class="headerlink" title="完全卸载"></a>完全卸载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl stop caddy.service &amp;&amp; systemctl <span class="hljs-built_in">disable</span> caddy.service &amp;&amp; <span class="hljs-built_in">rm</span> -rf /etc/caddy /usr/local/bin/caddy /etc/systemd/system/caddy.service<br></code></pre></td></tr></table></figure><h2 id="脚本说明"><a href="#脚本说明" class="headerlink" title="脚本说明"></a>脚本说明</h2><p>注意事项<br>必须使用root用户部署</p><p>请勿修改配置文件参数<br>免费域名<br>通过nip.io提供的免费域名解析服务获取，域名由ServerIP+nip.io组成<br>例如你的服务器IP为1.3.5.7，对应的域名则是1.3.5.7.nip.io<br>指定域名<br>仅建议在免费域名被阻断时使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">在密码后加入域名即可指定域名重新安装，密码与域名之间应使用空格分隔，执行命令如下：<br>systemctl stop caddy.service &amp;&amp; curl https://raw.githubusercontent.com/eastmaple/easytrojan/main/easytrojan.sh -o easytrojan.sh &amp;&amp; <span class="hljs-built_in">chmod</span> +x easytrojan.sh &amp;&amp; bash easytrojan.sh password yourdomain<br><br>*当指定域名后，如需切换回免费域名，必须完全卸载脚本，重新执行首次安装命令<br></code></pre></td></tr></table></figure><h2 id="更换端口"><a href="#更换端口" class="headerlink" title="更换端口"></a>更换端口</h2><p>仅建议在443端口被阻断时临时使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 将443端口更换为8443端口示例</span><br>sed -i <span class="hljs-string">&quot;s/443/8443/g&quot;</span> /etc/caddy/Caddyfile &amp;&amp; systemctl restart caddy.service<br><br>*更换端口后应开启对应端口的防火墙<br>*当测试临时端口超过48小时未阻断后，应尽快更换IP并重新安装，使用默认的443端口<br></code></pre></td></tr></table></figure><h2 id="免费证书"><a href="#免费证书" class="headerlink" title="免费证书"></a>免费证书</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">通过Caddy的HTTPS模块实现，会自动申请letsencrypt或zerossl的免费证书<br><br>*关闭防火墙后执行重新安装命令，能大概率解决证书申请失败的问题<br><br><span class="hljs-comment"># RHEL 7、8、9 (CentOS、RedHat、AlmaLinux、RockyLinux)</span><br>systemctl stop firewalld.service &amp;&amp; systemctl <span class="hljs-built_in">disable</span> firewalld.service<br><br><span class="hljs-comment"># Debian 9、10、11、Ubuntu 16、18、20、22</span><br>sudo ufw <span class="hljs-built_in">disable</span><br></code></pre></td></tr></table></figure><h2 id="连接参数"><a href="#连接参数" class="headerlink" title="连接参数"></a>连接参数</h2><p>IP为1.3.5.7 密码为123456的服务器示例</p><p>地址：1.3.5.7.nip.io  #根据服务器IP生成（即免费域名）<br>端口：443<br>密码：123456          #安装时设置的密码<br>ALPN: h2/http1.1</p><h2 id="服务伪装"><a href="#服务伪装" class="headerlink" title="服务伪装"></a>服务伪装</h2><p>非密码正确的trojan客户端访问返回503状态，将trojan伪装成过载的Web服务</p><h2 id="连接方式"><a href="#连接方式" class="headerlink" title="连接方式"></a>连接方式</h2><p>客户端的TLS指纹是导致trojan被封端口的重要原因之一，但问题不仅存在于客户端，服务端也应作出对应配置</p><p>移动设备建议使用能够开启uTLS指纹功能的客户端，暂未有数据表明其它设备会因未启用uTLS指纹功能被封端口</p><p>为方便用户理解，配置示例中使用服务器IP:1.3.5.7、密码:123456，实际应修改为trojan服务器真实的连接参数</p><p>客户端不只局限于以下几种，仅需支持trojan连接即可</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>CentOS7部署ocserv脚本</title>
    <link href="/2024/09/17/CentOS7%E9%83%A8%E7%BD%B2ocserv%E8%84%9A%E6%9C%AC/"/>
    <url>/2024/09/17/CentOS7%E9%83%A8%E7%BD%B2ocserv%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment">####################################################</span><br><span class="hljs-comment">#                                                  #</span><br><span class="hljs-comment"># This is a ocserv installation for CentOS 7       #</span><br><span class="hljs-comment"># Version: 1.1.1 20140803                          #</span><br><span class="hljs-comment"># Author: Travis Lee                               #</span><br><span class="hljs-comment"># Website: http://www.stunnel.info                 #</span><br><span class="hljs-comment">#                                                  #</span><br><span class="hljs-comment">####################################################</span><br><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;\e[33m####################################################</span><br><span class="hljs-string">#                                                  #</span><br><span class="hljs-string"># This is a ocserv installation for CentOS 7       #</span><br><span class="hljs-string"># Version: 1.1.1 20140803                          #</span><br><span class="hljs-string"># Author: Travis Lee                               #</span><br><span class="hljs-string"># Website: http://www.stunnel.info                 #</span><br><span class="hljs-string">#                                                  #</span><br><span class="hljs-string">####################################################\e[0m\n&quot;</span><br><br><span class="hljs-comment">#变量设置</span><br><span class="hljs-comment">#单IP最大连接数，默认是2</span><br>maxsameclients=10<br><span class="hljs-comment">#最大连接数，默认是16</span><br>maxclients=1024<br><span class="hljs-comment">#ocserv版本</span><br>version=0.8.2<br><span class="hljs-comment">#服务器的证书和key文件，放在本脚本的同目录下，key文件的权限应该是600或者400</span><br>servercert=server-cert.pem<br>serverkey=server-key.pem<br><span class="hljs-comment">#配置目录，你可更改为 /etc/ocserv 之类的</span><br>confdir=/usr/local/etc/ocserv<br><br><span class="hljs-comment">#检测是否是root用户</span><br><span class="hljs-keyword">if</span> [[ $(<span class="hljs-built_in">id</span> -u) != <span class="hljs-string">&quot;0&quot;</span> ]]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;\e[42m\e[31mError: You must be root to run this install script.\e[0m\n&quot;</span><br>    <span class="hljs-built_in">exit</span> 1<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment">#检测是否是CentOS 7或者RHEL 7</span><br><span class="hljs-keyword">if</span> [[ $(grep <span class="hljs-string">&quot;release 7.&quot;</span> /etc/redhat-release 2&gt;/dev/null | <span class="hljs-built_in">wc</span> -l) -eq 0 ]]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;\e[42m\e[31mError: Your OS is NOT CentOS 7 or RHEL 7.\e[0m\n&quot;</span><br>    <span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;\e[42m\e[31mThis install script is ONLY for CentOS 7 and RHEL 7.\e[0m\n&quot;</span><br>    <span class="hljs-built_in">exit</span> 1<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment">#升级系统，安装系统组件</span><br><span class="hljs-comment">#yum update -y</span><br>yum install -y gcc wget pcre-devel tar net-tools \<br>openssl openssl-devel curl-devel bind-utils<br>clear<br><br><span class="hljs-comment">#获取网卡接口名称</span><br>ethlist=$(ifconfig | grep <span class="hljs-string">&quot;: flags&quot;</span> | <span class="hljs-built_in">cut</span> -d <span class="hljs-string">&quot;:&quot;</span> -f1)<br>eth=$(<span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;<span class="hljs-variable">$ethlist</span>\n&quot;</span> | <span class="hljs-built_in">head</span> -n 1)<br><span class="hljs-keyword">if</span> [[ $(<span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;<span class="hljs-variable">$ethlist</span>\n&quot;</span> | <span class="hljs-built_in">wc</span> -l) -gt 2 ]]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> ======================================<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Network Interface list:&quot;</span><br>    <span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;\e[33m<span class="hljs-variable">$ethlist</span>\e[0m\n&quot;</span><br>    <span class="hljs-built_in">echo</span> ======================================<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Which network interface you want to listen for ocserv?&quot;</span><br>    <span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;Default network interface is \e[33m<span class="hljs-variable">$eth</span>\e[0m, let it blank to use default network interface: &quot;</span><br>    <span class="hljs-built_in">read</span> ethtmp<br>    <span class="hljs-keyword">if</span> [[ -n <span class="hljs-string">&quot;<span class="hljs-variable">$ethtmp</span>&quot;</span> ]]; <span class="hljs-keyword">then</span><br>        eth=<span class="hljs-variable">$ethtmp</span><br>    <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment">#端口，默认是10443</span><br>port=10443<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Please input the port ocserv listen to.&quot;</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;Default port is \e[33m<span class="hljs-variable">$port</span>\e[0m, let it blank to use default port: &quot;</span><br><span class="hljs-built_in">read</span> porttmp<br><span class="hljs-keyword">if</span> [[ -n <span class="hljs-string">&quot;<span class="hljs-variable">$porttmp</span>&quot;</span> ]]; <span class="hljs-keyword">then</span><br>    port=<span class="hljs-variable">$porttmp</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment">#用户名，默认是user</span><br>username=user<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Please input ocserv user name:&quot;</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;Default user name is \e[33m<span class="hljs-variable">$username</span>\e[0m, let it blank to use default user name: &quot;</span><br><span class="hljs-built_in">read</span> usernametmp<br><span class="hljs-keyword">if</span> [[ -n <span class="hljs-string">&quot;<span class="hljs-variable">$usernametmp</span>&quot;</span> ]]; <span class="hljs-keyword">then</span><br>    username=<span class="hljs-variable">$usernametmp</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment">#随机密码</span><br><span class="hljs-function"><span class="hljs-title">randstr</span></span>() &#123;<br>    index=0<br>    str=<span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> &#123;a..z&#125;; <span class="hljs-keyword">do</span> arr[index]=<span class="hljs-variable">$i</span>; index=$(<span class="hljs-built_in">expr</span> <span class="hljs-variable">$&#123;index&#125;</span> + 1); <span class="hljs-keyword">done</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> &#123;A..Z&#125;; <span class="hljs-keyword">do</span> arr[index]=<span class="hljs-variable">$i</span>; index=$(<span class="hljs-built_in">expr</span> <span class="hljs-variable">$&#123;index&#125;</span> + 1); <span class="hljs-keyword">done</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> &#123;0..9&#125;; <span class="hljs-keyword">do</span> arr[index]=<span class="hljs-variable">$i</span>; index=$(<span class="hljs-built_in">expr</span> <span class="hljs-variable">$&#123;index&#125;</span> + 1); <span class="hljs-keyword">done</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> &#123;1..10&#125;; <span class="hljs-keyword">do</span> str=<span class="hljs-string">&quot;$str<span class="hljs-variable">$&#123;arr[$RANDOM%$index]&#125;</span>&quot;</span>; <span class="hljs-keyword">done</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">$str</span><br>&#125;<br>password=$(randstr)<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;Please input \e[33m<span class="hljs-variable">$username</span>\e[0m&#x27;s password:\n&quot;</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;Default password is \e[33m<span class="hljs-variable">$password</span>\e[0m, let it blank to use default password: &quot;</span><br><span class="hljs-built_in">read</span> passwordtmp<br><span class="hljs-keyword">if</span> [[ -n <span class="hljs-string">&quot;<span class="hljs-variable">$passwordtmp</span>&quot;</span> ]]; <span class="hljs-keyword">then</span><br>    password=<span class="hljs-variable">$passwordtmp</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment">#打印配置参数</span><br>clear<br>ipv4=$(ip -4 -f inet addr | grep <span class="hljs-string">&quot;inet &quot;</span> | grep -v <span class="hljs-string">&quot;lo:&quot;</span> | grep -v <span class="hljs-string">&quot;127.0.0.1&quot;</span> | grep -o -P <span class="hljs-string">&quot;\d+\.\d+\.\d+\.\d+\/\d+&quot;</span> | grep -o -P <span class="hljs-string">&quot;\d+\.\d+\.\d+\.\d+&quot;</span>)<br>ipv6=$(ip -6 addr | grep <span class="hljs-string">&quot;inet6&quot;</span> | grep -v <span class="hljs-string">&quot;::1/128&quot;</span> | grep -o -P <span class="hljs-string">&quot;([a-z\d]+:[a-z\d:]+\/\d+)&quot;</span> | grep -o -P <span class="hljs-string">&quot;([a-z\d]+:[a-z\d:]+)&quot;</span>)<br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;IPv4:\t\t\e[34m<span class="hljs-subst">$(echo $ipv4)</span>\e[0m&quot;</span><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;IPv6:\t\t\e[34m<span class="hljs-subst">$(echo $ipv6)</span>\e[0m&quot;</span><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;Port:\t\t\e[34m<span class="hljs-variable">$port</span>\e[0m&quot;</span><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;username:\t\e[34m<span class="hljs-variable">$username</span>\e[0m&quot;</span><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;password:\t\e[34m<span class="hljs-variable">$password</span>\e[0m&quot;</span><br><span class="hljs-built_in">echo</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Press any key to start install ocserv.&quot;</span><br><br><span class="hljs-function"><span class="hljs-title">get_char</span></span>() &#123;<br>    SAVEDSTTY=$(<span class="hljs-built_in">stty</span> -g)<br>    <span class="hljs-built_in">stty</span> -<span class="hljs-built_in">echo</span><br>    <span class="hljs-built_in">stty</span> cbreak<br>    <span class="hljs-built_in">dd</span> <span class="hljs-keyword">if</span>=/dev/tty bs=1 count=1 2&gt; /dev/null<br>    <span class="hljs-built_in">stty</span> -raw<br>    <span class="hljs-built_in">stty</span> <span class="hljs-built_in">echo</span><br>    <span class="hljs-built_in">stty</span> <span class="hljs-variable">$SAVEDSTTY</span><br>&#125;<br>char=$(get_char)<br>clear<br><br><span class="hljs-comment">#安装ocserv依赖组件</span><br>yum install -y gnutls gnutls-utils gnutls-devel readline readline-devel \<br>libnl-devel libtalloc libtalloc-devel libnl3-devel \<br>unbound pam pam-devel libtalloc-devel xz libseccomp-devel \<br>tcp_wrappers-devel autogen autogen-libopts-devel<br><br><span class="hljs-comment">#关闭selinux，增加libgnutls环境变量</span><br>sed -i <span class="hljs-string">&#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27;</span> /etc/selinux/config<br>setenforce 0<br><span class="hljs-built_in">export</span> LIBGNUTLS_CFLAGS=<span class="hljs-string">&quot;-I/usr/include/&quot;</span> LIBGNUTLS_LIBS=<span class="hljs-string">&quot;-L/usr/lib/ -lgnutls&quot;</span><br><br><span class="hljs-comment">#下载ocserv并编译安装</span><br>wget  http://mybase.fuluping.com/conf/ocserv-0.8.2.tar.xz<br>tar Jxf ocserv-<span class="hljs-variable">$version</span>.tar.xz<br><span class="hljs-built_in">cd</span> ocserv-<span class="hljs-variable">$version</span><br>./configure<br>make<br>make install<br><br><span class="hljs-comment">#复制配置文件样本</span><br><span class="hljs-built_in">mkdir</span> -p <span class="hljs-string">&quot;<span class="hljs-variable">$confdir</span>&quot;</span><br><span class="hljs-built_in">cp</span> <span class="hljs-string">&quot;doc/sample.config&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$confdir</span>/ocserv.conf&quot;</span><br><span class="hljs-built_in">cp</span> <span class="hljs-string">&quot;doc/systemd/standalone/ocserv.service&quot;</span> <span class="hljs-string">&quot;/usr/lib/systemd/system/ocserv.service&quot;</span><br><br><span class="hljs-comment">#检测是否有证书和key文件</span><br><span class="hljs-built_in">cd</span> ..<br><span class="hljs-keyword">if</span> [[ ! -f <span class="hljs-string">&quot;<span class="hljs-variable">$servercert</span>&quot;</span> ]] || [[ ! -f <span class="hljs-string">&quot;<span class="hljs-variable">$serverkey</span>&quot;</span> ]]; <span class="hljs-keyword">then</span><br>    <span class="hljs-comment">#创建ca证书和服务器证书（参考http://www.infradead.org/ocserv/manual.html#heading5）</span><br>    certtool --generate-privkey --outfile ca-key.pem<br><br>    <span class="hljs-built_in">cat</span> &lt;&lt; <span class="hljs-string">_EOF_ &gt;ca.tmpl</span><br><span class="hljs-string">cn = &quot;stunnel.info VPN&quot;</span><br><span class="hljs-string">organization = &quot;stunnel.info&quot;</span><br><span class="hljs-string">serial = 1</span><br><span class="hljs-string">expiration_days = 3650</span><br><span class="hljs-string">ca</span><br><span class="hljs-string">signing_key</span><br><span class="hljs-string">cert_signing_key</span><br><span class="hljs-string">crl_signing_key</span><br><span class="hljs-string">_EOF_</span><br><br>    certtool --generate-self-signed --load-privkey ca-key.pem \<br>    --template ca.tmpl --outfile ca-cert.pem<br>    certtool --generate-privkey --outfile <span class="hljs-variable">$serverkey</span><br><br>    <span class="hljs-built_in">cat</span> &lt;&lt; <span class="hljs-string">_EOF_ &gt;server.tmpl</span><br><span class="hljs-string">cn = &quot;stunnel.info VPN&quot;</span><br><span class="hljs-string">o = &quot;stunnel&quot;</span><br><span class="hljs-string">serial = 2</span><br><span class="hljs-string">expiration_days = 3650</span><br><span class="hljs-string">signing_key</span><br><span class="hljs-string">encryption_key #only if the generated key is an RSA one</span><br><span class="hljs-string">tls_www_server</span><br><span class="hljs-string">_EOF_</span><br><br>    certtool --generate-certificate --load-privkey <span class="hljs-variable">$serverkey</span> \<br>    --load-ca-certificate ca-cert.pem --load-ca-privkey ca-key.pem \<br>    --template server.tmpl --outfile <span class="hljs-variable">$servercert</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment">#把证书复制到ocserv的配置目录</span><br><span class="hljs-built_in">cp</span> <span class="hljs-string">&quot;<span class="hljs-variable">$servercert</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$confdir</span>&quot;</span> &amp;&amp; <span class="hljs-built_in">cp</span> <span class="hljs-string">&quot;<span class="hljs-variable">$serverkey</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$confdir</span>&quot;</span><br><br><span class="hljs-comment">#编辑配置文件</span><br>(<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$password</span>&quot;</span>; <span class="hljs-built_in">sleep</span> 1; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$password</span>&quot;</span>) | ocpasswd -c <span class="hljs-string">&quot;<span class="hljs-variable">$confdir</span>/ocpasswd&quot;</span> <span class="hljs-variable">$username</span><br><br>sed -i <span class="hljs-string">&quot;s#./sample.passwd#<span class="hljs-variable">$confdir</span>/ocpasswd#g&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$confdir</span>/ocserv.conf&quot;</span><br>sed -i <span class="hljs-string">&quot;s#server-cert = ../tests/server-cert.pem#server-cert = <span class="hljs-variable">$confdir</span>/<span class="hljs-variable">$servercert</span>#g&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$confdir</span>/ocserv.conf&quot;</span><br>sed -i <span class="hljs-string">&quot;s#server-key = ../tests/server-key.pem#server-key = <span class="hljs-variable">$confdir</span>/<span class="hljs-variable">$serverkey</span>#g&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$confdir</span>/ocserv.conf&quot;</span><br>sed -i <span class="hljs-string">&quot;s/max-same-clients = 2/max-same-clients = <span class="hljs-variable">$maxsameclients</span>/g&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$confdir</span>/ocserv.conf&quot;</span><br>sed -i <span class="hljs-string">&quot;s/max-clients = 16/max-clients = <span class="hljs-variable">$maxclients</span>/g&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$confdir</span>/ocserv.conf&quot;</span><br>sed -i <span class="hljs-string">&quot;s/tcp-port = 443/tcp-port = <span class="hljs-variable">$port</span>/g&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$confdir</span>/ocserv.conf&quot;</span><br>sed -i <span class="hljs-string">&quot;s/udp-port = 443/udp-port = <span class="hljs-variable">$port</span>/g&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$confdir</span>/ocserv.conf&quot;</span><br>sed -i <span class="hljs-string">&quot;s/default-domain = example.com/#default-domain = example.com/g&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$confdir</span>/ocserv.conf&quot;</span><br>sed -i <span class="hljs-string">&quot;s/ipv4-network = 192.168.1.0/ipv4-network = 192.168.8.0/g&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$confdir</span>/ocserv.conf&quot;</span><br>sed -i <span class="hljs-string">&quot;s/ipv4-netmask = 255.255.255.0/ipv4-netmask = 255.255.251.0/g&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$confdir</span>/ocserv.conf&quot;</span><br>sed -i <span class="hljs-string">&quot;s/dns = 192.168.1.2/dns = 8.8.8.8\ndns = 8.8.4.4/g&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$confdir</span>/ocserv.conf&quot;</span><br>sed -i <span class="hljs-string">&quot;s/run-as-group = daemon/run-as-group = nobody/g&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$confdir</span>/ocserv.conf&quot;</span><br>sed -i <span class="hljs-string">&quot;s/cookie-timeout = 300/cookie-timeout = 86400/g&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$confdir</span>/ocserv.conf&quot;</span><br>sed -i <span class="hljs-string">&#x27;s$route = 192.168.1.0/255.255.255.0$#route = 192.168.1.0/255.255.255.0$g&#x27;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$confdir</span>/ocserv.conf&quot;</span><br>sed -i <span class="hljs-string">&#x27;s$route = 192.168.5.0/255.255.255.0$#route = 192.168.5.0/255.255.255.0$g&#x27;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$confdir</span>/ocserv.conf&quot;</span><br><br><br><br><span class="hljs-comment">#修改ocserv服务</span><br>sed -i <span class="hljs-string">&quot;s#^ExecStart=#ExecStartPre=/usr/bin/firewall-cmd --direct --add-rule ipv4 filter FORWARD 0 -s 192.168.8.0/21 -j ACCEPT\nExecStartPre=/usr/bin/firewall-cmd --direct --add-rule ipv4 nat POSTROUTING 0 -s 192.168.8.0/21 -o <span class="hljs-variable">$eth</span> -j MASQUERADE\nExecStart=#g&quot;</span> <span class="hljs-string">&quot;/usr/lib/systemd/system/ocserv.service&quot;</span><br>sed -i <span class="hljs-string">&quot;s#/usr/sbin/ocserv#/usr/local/sbin/ocserv#g&quot;</span> <span class="hljs-string">&quot;/usr/lib/systemd/system/ocserv.service&quot;</span><br>sed -i <span class="hljs-string">&quot;s#/etc/ocserv/ocserv.conf#<span class="hljs-variable">$confdir</span>/ocserv.conf#g&quot;</span> <span class="hljs-string">&quot;/usr/lib/systemd/system/ocserv.service&quot;</span><br><br><span class="hljs-comment">#添加防火墙允许列表</span><br><span class="hljs-built_in">cat</span> &lt;&lt; <span class="hljs-string">_EOF_ &gt;/usr/lib/firewalld/services/ocserv.xml</span><br><span class="hljs-string">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="hljs-string">&lt;service&gt;</span><br><span class="hljs-string">  &lt;short&gt;ocserv&lt;/short&gt;</span><br><span class="hljs-string">  &lt;description&gt;Cisco AnyConnect&lt;/description&gt;</span><br><span class="hljs-string">  &lt;port protocol=&quot;tcp&quot; port=&quot;$port&quot;/&gt;</span><br><span class="hljs-string">  &lt;port protocol=&quot;udp&quot; port=&quot;$port&quot;/&gt;</span><br><span class="hljs-string">&lt;/service&gt;</span><br><span class="hljs-string">_EOF_</span><br><br><span class="hljs-comment">#修改系统</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Enable IP forward.&quot;</span><br>sysctl -w net.ipv4.ip_forward=1<br><span class="hljs-built_in">echo</span> net.ipv4.ip_forward = 1 &gt;&gt; <span class="hljs-string">&quot;/etc/sysctl.conf&quot;</span><br><span class="hljs-built_in">sleep</span> 1<br>systemctl daemon-reload<br><span class="hljs-built_in">sleep</span> 1<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Enable ocserv service to start during bootup.&quot;</span><br>systemctl <span class="hljs-built_in">enable</span> ocserv.service<br>systemctl restart firewalld<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Adding firewall ports.&quot;</span><br>firewall-cmd --permanent --add-service=ocserv<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Allows firewall to forward.&quot;</span><br>firewall-cmd --permanent --add-masquerade<br><span class="hljs-built_in">sleep</span> 1<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Reload firewall configure.&quot;</span><br>firewall-cmd --reload<br><span class="hljs-built_in">sleep</span> 1<br><span class="hljs-comment">#firewall-cmd --direct --add-rule ipv4 filter FORWARD 0 -s 192.168.8.0/21 -j ACCEPT</span><br><span class="hljs-comment">##firewall-cmd --direct --add-rule ipv4 filter FORWARD 0 -s 192.168.8.0/21 -o $eth -j ACCEPT</span><br><span class="hljs-comment">##iptables -A FORWARD -s 192.168.8.0/21 -j ACCEPT</span><br><span class="hljs-comment">#firewall-cmd --direct --add-rule ipv4 nat POSTROUTING 0 -s 192.168.8.0/21 -o $eth -j MASQUERADE</span><br><span class="hljs-comment">##iptables -t nat -A POSTROUTING -s 192.168.8.0/21 -o $eth -j MASQUERADE</span><br><br><span class="hljs-comment">#开启ocserv服务</span><br>systemctl daemon-reload<br>systemctl start ocserv.service<br><span class="hljs-built_in">echo</span> <br><br><span class="hljs-comment">#检测防火墙和ocserv服务是否正常</span><br>clear<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;\e[36mChenking FirewallD status...\e[0m\n&quot;</span><br>iptables -L -n | grep --color=auto -E <span class="hljs-string">&quot;(<span class="hljs-variable">$port</span>|192.168.8.0)&quot;</span><br>line=$(iptables -L -n | grep -E <span class="hljs-string">&quot;(<span class="hljs-variable">$port</span>|192.168.8.0)&quot;</span> | <span class="hljs-built_in">wc</span> -l)<br><span class="hljs-keyword">if</span> [[ <span class="hljs-variable">$line</span> -ge 3 ]]<br><span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;\e[34mFirewallD is OK! \e[0m\n&quot;</span><br><span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;\e[33mWARNING!!! FirewallD is Wrong! \e[0m\n&quot;</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-built_in">echo</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;\e[36mChenking ocserv service status...\e[0m\n&quot;</span><br>netstat -anp | grep <span class="hljs-string">&quot;:<span class="hljs-variable">$port</span>&quot;</span> | grep --color=auto -E <span class="hljs-string">&quot;(<span class="hljs-variable">$port</span>|ocserv|tcp|udp)&quot;</span><br>linetcp=$(netstat -anp | grep <span class="hljs-string">&quot;:<span class="hljs-variable">$port</span>&quot;</span> | grep ocserv | grep tcp | <span class="hljs-built_in">wc</span> -l)<br>lineudp=$(netstat -anp | grep <span class="hljs-string">&quot;:<span class="hljs-variable">$port</span>&quot;</span> | grep ocserv | grep udp | <span class="hljs-built_in">wc</span> -l)<br><span class="hljs-keyword">if</span> [[ <span class="hljs-variable">$linetcp</span> -ge 1 &amp;&amp; <span class="hljs-variable">$lineudp</span> -ge 1 ]]<br><span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;\e[34mocserv service is OK! \e[0m\n&quot;</span><br><span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;\e[33mWARNING!!! ocserv service is Wrong! \e[0m\n&quot;</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment">#打印VPN参数</span><br><span class="hljs-comment">#ipv4=$(ip -4 -f inet addr | grep &quot;inet &quot; | grep -v &quot;lo:&quot; | grep -v &quot;127.0.0.1&quot; | grep -o -P &quot;\d+\.\d+\.\d+\.\d+\/\d+&quot; | grep -o -P &quot;\d+\.\d+\.\d+\.\d+&quot;)</span><br><span class="hljs-comment">#ipv6=$(ip -6 addr | grep &quot;inet6&quot; | grep -v &quot;::1/128&quot; | grep -o -P &quot;([a-z\d]+:[a-z\d:]+\/\d+)&quot; | grep -o -P &quot;([a-z\d]+:[a-z\d:]+)&quot;)</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;</span><br><span class="hljs-string">if there are \e[33mNO WARNING\e[0m above, then you can connect to</span><br><span class="hljs-string">your ocserv VPN Server with the default user/password below:</span><br><span class="hljs-string">======================================\n&quot;</span><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;IPv4:\t\t\e[34m<span class="hljs-subst">$(echo $ipv4)</span>\e[0m&quot;</span><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;IPv6:\t\t\e[34m<span class="hljs-subst">$(echo $ipv6)</span>\e[0m&quot;</span><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;Port:\t\t\e[34m<span class="hljs-variable">$port</span>\e[0m&quot;</span><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;username:\t\e[34m<span class="hljs-variable">$username</span>\e[0m&quot;</span><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;password:\t\e[34m<span class="hljs-variable">$password</span>\e[0m&quot;</span><br><br><span class="hljs-built_in">exit</span> 0<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>lvm2</title>
    <link href="/2024/09/17/lvm2/"/>
    <url>/2024/09/17/lvm2/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>VM镜像<br>镜像能够分配物理分区的多个副本，从而提高数据的可用性。当某个磁盘发生故障并且其物理分区变为不可用时，你仍然可以访问可用磁盘上的镜像数据。LVM在逻辑卷内执行镜像。</p><h4 id="系统版本"><a href="#系统版本" class="headerlink" title="系统版本"></a>系统版本</h4><h1 id="cat-etc-centos-release"><a href="#cat-etc-centos-release" class="headerlink" title="cat /etc/centos-release"></a>cat /etc/centos-release</h1><p>CentOS Linux release 7.2.1511 (Core)</p><h4 id="磁盘"><a href="#磁盘" class="headerlink" title="磁盘"></a>磁盘</h4><p>[root@host-192-168-100-19 ~]# lsblk<br>NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT<br>vda 252:0 0 10G 0 disk<br>├─vda1 252:1 0 500M 0 part /boot<br>└─vda2 252:2 0 9.5G 0 part<br>├─centos-root 253:0 0 8.5G 0 lvm /<br>└─centos-swap 253:1 0 1G 0 lvm [SWAP]<br>vdb 252:16 0 5G 0 disk<br>vdc 252:32 0 5G 0 disk<br>vdd 252:48 0 5G 0 disk</p><h4 id="创建物理卷"><a href="#创建物理卷" class="headerlink" title="创建物理卷"></a>创建物理卷</h4><h1 id="pvcreate-dev-vdb-dev-vdc"><a href="#pvcreate-dev-vdb-dev-vdc" class="headerlink" title="pvcreate /dev/vdb /dev/vdc"></a>pvcreate /dev/vdb /dev/vdc</h1><h4 id="创建卷组"><a href="#创建卷组" class="headerlink" title="创建卷组"></a>创建卷组</h4><h1 id="vgcreate-wyl-dev-vdb-dev-vdc"><a href="#vgcreate-wyl-dev-vdb-dev-vdc" class="headerlink" title="vgcreate wyl /dev/vdb /dev/vdc"></a>vgcreate wyl /dev/vdb /dev/vdc</h1><h4 id="创建镜像卷"><a href="#创建镜像卷" class="headerlink" title="创建镜像卷"></a>创建镜像卷</h4><p>lvcreate -L 3G -m1 -n mirror wyl /dev/vdc /dev/vdb</p><p>说明:<br>使用-ml参数标志为创建镜像；使用-L参数设定镜像卷的大小为3G；使用-n参数为镜像指定名称为mirror。这个镜像包括两部分：vdb和vdc为数据卷和副本卷分区<br>查看逻辑卷的状态<br>查看当前lvm中设备状态：</p><p>![[](<a href="https://stackedit.oss-cn-shanghai.aliyuncs.com/jpg/lvm_mirror/11.png">https://stackedit.oss-cn-shanghai.aliyuncs.com/jpg/lvm_mirror/11.png</a>)</p><h1 id="lvs-a-o-devices"><a href="#lvs-a-o-devices" class="headerlink" title="lvs -a -o +devices"></a>lvs -a -o +devices</h1><p><img src="https://stackedit.oss-cn-shanghai.aliyuncs.com/jpg/lvm_mirror/12.png" srcset="/img/loading.gif" lazyload alt="enter image description here"></p><h4 id="对新建的镜像lv进行格式化和挂载"><a href="#对新建的镜像lv进行格式化和挂载" class="headerlink" title="对新建的镜像lv进行格式化和挂载"></a>对新建的镜像lv进行格式化和挂载</h4><h1 id="mkfs-xfs-dev-wyl-mirror"><a href="#mkfs-xfs-dev-wyl-mirror" class="headerlink" title="mkfs.xfs /dev/wyl/mirror"></a>mkfs.xfs /dev/wyl/mirror</h1><h1 id="mkdir-mirror"><a href="#mkdir-mirror" class="headerlink" title="mkdir /mirror"></a>mkdir /mirror</h1><h1 id="mount-dev-wyl-mirror-mirror"><a href="#mount-dev-wyl-mirror-mirror" class="headerlink" title="mount /dev/wyl/mirror /mirror/"></a>mount /dev/wyl/mirror /mirror/</h1><h4 id="测试分区读写ok"><a href="#测试分区读写ok" class="headerlink" title="测试分区读写ok"></a>测试分区读写ok</h4><h1 id="cd-mirror"><a href="#cd-mirror" class="headerlink" title="cd /mirror/"></a>cd /mirror/</h1><h1 id="echo-“it’s-ok”-gt-test"><a href="#echo-“it’s-ok”-gt-test" class="headerlink" title="echo “it’s ok” &gt;test"></a>echo “it’s ok” &gt;test</h1><h1 id="cat-test"><a href="#cat-test" class="headerlink" title="cat test"></a>cat test</h1><p>it’s ok</p><h4 id="对镜像lvm进行破坏"><a href="#对镜像lvm进行破坏" class="headerlink" title="对镜像lvm进行破坏"></a>对镜像lvm进行破坏</h4><h1 id="dd-if-dev-zero-of-dev-vdc-count-10"><a href="#dd-if-dev-zero-of-dev-vdc-count-10" class="headerlink" title="dd if=/dev/zero of=/dev/vdc count=10"></a>dd if=/dev/zero of=/dev/vdc count=10</h1><p><img src="https://stackedit.oss-cn-shanghai.aliyuncs.com/jpg/lvm_mirror/13.png" srcset="/img/loading.gif" lazyload alt="enter image description here"></p><h4 id="破坏之后可以看到镜像lv中的-dev-vdc变成了未知"><a href="#破坏之后可以看到镜像lv中的-dev-vdc变成了未知" class="headerlink" title="破坏之后可以看到镜像lv中的/dev/vdc变成了未知"></a>破坏之后可以看到镜像lv中的/dev/vdc变成了未知</h4><p><img src="https://stackedit.oss-cn-shanghai.aliyuncs.com/jpg/lvm_mirror/14.png" srcset="/img/loading.gif" lazyload alt="enter image description here"><br><img src="https://stackedit.oss-cn-shanghai.aliyuncs.com/jpg/lvm_mirror/15.png" srcset="/img/loading.gif" lazyload alt="enter image description here"></p><h4 id="把坏掉的设备从wyl中移除："><a href="#把坏掉的设备从wyl中移除：" class="headerlink" title="把坏掉的设备从wyl中移除："></a>把坏掉的设备从wyl中移除：</h4><h1 id="vgreduce-—removemissing-—force-wyl"><a href="#vgreduce-—removemissing-—force-wyl" class="headerlink" title="vgreduce —removemissing —force wyl"></a>vgreduce —removemissing —force wyl</h1><h4 id="查看当前lvm中设备状态："><a href="#查看当前lvm中设备状态：" class="headerlink" title="查看当前lvm中设备状态："></a>查看当前lvm中设备状态：</h4><h1 id="lvs-a-o-devices-1"><a href="#lvs-a-o-devices-1" class="headerlink" title="lvs -a -o +devices"></a>lvs -a -o +devices</h1><p><img src="https://stackedit.oss-cn-shanghai.aliyuncs.com/jpg/lvm_mirror/16.png" srcset="/img/loading.gif" lazyload alt="enter image description here"></p><h4 id="镜像数据恢复（过程中无须解除逻辑卷的挂载）"><a href="#镜像数据恢复（过程中无须解除逻辑卷的挂载）" class="headerlink" title="镜像数据恢复（过程中无须解除逻辑卷的挂载）"></a>镜像数据恢复（过程中无须解除逻辑卷的挂载）</h4><p>在wyl中新加一个pv，对数据进行恢复：</p><h1 id="vgextend-wyl-dev-vdd"><a href="#vgextend-wyl-dev-vdd" class="headerlink" title="vgextend wyl /dev/vdd"></a>vgextend wyl /dev/vdd</h1><h4 id="取消设置镜像卷"><a href="#取消设置镜像卷" class="headerlink" title="取消设置镜像卷"></a>取消设置镜像卷</h4><h1 id="lvconvert-m0-dev-wyl-mirror"><a href="#lvconvert-m0-dev-wyl-mirror" class="headerlink" title="lvconvert -m0 /dev/wyl/mirror"></a>lvconvert -m0 /dev/wyl/mirror</h1><h4 id="迁移数据-将vdc数据同步到vdd中"><a href="#迁移数据-将vdc数据同步到vdd中" class="headerlink" title="迁移数据,将vdc数据同步到vdd中"></a>迁移数据,将vdc数据同步到vdd中</h4><h1 id="lvconvert-m1-dev-wyl-mirror-dev-vdd-dev-vdc"><a href="#lvconvert-m1-dev-wyl-mirror-dev-vdd-dev-vdc" class="headerlink" title="lvconvert -m1 /dev/wyl/mirror /dev/vdd /dev/vdc"></a>lvconvert -m1 /dev/wyl/mirror /dev/vdd /dev/vdc</h1><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><h1 id="cd-mirror-1"><a href="#cd-mirror-1" class="headerlink" title="cd /mirror/"></a>cd /mirror/</h1><h1 id="echo-‘it-is-ok-2’-gt-test2"><a href="#echo-‘it-is-ok-2’-gt-test2" class="headerlink" title="echo ‘it is ok 2’ &gt;test2"></a>echo ‘it is ok 2’ &gt;test2</h1><h1 id="cat-test-1"><a href="#cat-test-1" class="headerlink" title="cat test"></a>cat test</h1><p>it’s ok</p><p>镜像能够分配物理分区的多个副本，从而提高数据的可用性。当某个磁盘发生故障并且其物理分区变为不可用时，你仍然可以访问可用磁盘上的镜像数据。LVM在逻辑卷内执行镜像。</p><p>系统版本<br>cat /etc/centos-release<br>CentOS Linux release 7.2.1511 (Core)</p><p>磁盘<br>[root@host-192-168-100-19 ~]# lsblk<br>NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT<br>vda 252:0 0 10G 0 disk<br>├─vda1 252:1 0 500M 0 part /boot<br>└─vda2 252:2 0 9.5G 0 part<br>├─centos-root 253:0 0 8.5G 0 lvm /<br>└─centos-swap 253:1 0 1G 0 lvm [SWAP]<br>vdb 252:16 0 5G 0 disk<br>vdc 252:32 0 5G 0 disk<br>vdd 252:48 0 5G 0 disk</p><p>创建物理卷<br>pvcreate /dev/vdb /dev/vdc<br>创建卷组<br>vgcreate wyl /dev/vdb /dev/vdc<br>创建镜像卷<br>lvcreate -L 3G -m1 -n mirror wyl /dev/vdc /dev/vdb</p><p>说明:<br>使用-ml参数标志为创建镜像；使用-L参数设定镜像卷的大小为3G；使用-n参数为镜像指定名称为mirror。这个镜像包括两部分：vdb和vdc为数据卷和副本卷分区<br>查看逻辑卷的状态<br>查看当前lvm中设备状态：</p><p>lvs -a -o +devices<br>enter image description here</p><p>对新建的镜像lv进行格式化和挂载<br>mkfs.xfs /dev/wyl/mirror<br>mkdir /mirror<br>mount /dev/wyl/mirror /mirror/<br>测试分区读写ok<br>cd /mirror/<br>echo “it’s ok” &gt;test<br>cat test<br>it’s ok</p><p>对镜像lvm进行破坏<br>dd if=/dev/zero of=/dev/vdc count=10<br>enter image description here</p><p>破坏之后可以看到镜像lv中的/dev/vdc变成了未知<br>enter image description here<br>enter image description here</p><p>把坏掉的设备从wyl中移除：<br>vgreduce —removemissing —force wyl<br>查看当前lvm中设备状态：<br>lvs -a -o +devices<br>enter image description here</p><p>镜像数据恢复（过程中无须解除逻辑卷的挂载）<br>在wyl中新加一个pv，对数据进行恢复：</p><p>vgextend wyl /dev/vdd<br>取消设置镜像卷<br>lvconvert -m0 /dev/wyl/mirror<br>迁移数据,将vdc数据同步到vdd中<br>lvconvert -m1 /dev/wyl/mirror /dev/vdd /dev/vdc<br>测试<br>cd /mirror/<br>echo ‘it is ok 2’ &gt;test2<br>cat test<br>it’s ok</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
